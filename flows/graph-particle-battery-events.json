[
    {
        "id": "421ad137.6b2c78",
        "type": "subflow",
        "name": "Log Error",
        "info": "This Subflow will log errors to a FileMaker database.",
        "category": "Error Handling",
        "in": [
            {
                "x": 60,
                "y": 40,
                "wires": [
                    {
                        "id": "3ab4c5f.29df4ba"
                    },
                    {
                        "id": "77b1ea58.ef15cc"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 880,
                "y": 40,
                "wires": [
                    {
                        "id": "ab50c451.d0a9c",
                        "port": 0
                    },
                    {
                        "id": "421ad137.6b2c78",
                        "port": 0
                    }
                ]
            }
        ],
        "env": []
    },
    {
        "id": "ca6c82d8.1fb968",
        "type": "catch",
        "z": "421ad137.6b2c78",
        "name": "Catch Error Logging Issue",
        "scope": ["5d3ad651.0e6f9", "3ab4c5f.29df4ba", "ab50c451.d0a9c"],
        "uncaught": false,
        "x": 270,
        "y": 140,
        "wires": [["77b1ea58.ef15cc"]]
    },
    {
        "id": "ab50c451.d0a9c",
        "type": "dapi-create-record",
        "z": "421ad137.6b2c78",
        "name": "Create Error Log Entry",
        "client": "419e4bb0.483ef4",
        "layout": "Log API",
        "layoutType": "str",
        "data": "error",
        "dataType": "msg",
        "scripts": "",
        "scriptsType": "none",
        "merge": "false",
        "mergeType": "bool",
        "output": "payload",
        "x": 720,
        "y": 40,
        "wires": [[]]
    },
    {
        "id": "3ab4c5f.29df4ba",
        "type": "function",
        "z": "421ad137.6b2c78",
        "name": "Create Error Log",
        "func": "msg.error = {\n    error: msg.error,\n    payload: msg.payload\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 500,
        "y": 40,
        "wires": [["a5f44368.242548"]]
    },
    {
        "id": "77b1ea58.ef15cc",
        "type": "change",
        "z": "421ad137.6b2c78",
        "name": "Set Log Error Message",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "error.message",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 530,
        "y": 100,
        "wires": [["a5f44368.242548"]]
    },
    {
        "id": "a5f44368.242548",
        "type": "debug",
        "z": "421ad137.6b2c78",
        "name": "Log Error",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 740,
        "y": 100,
        "wires": []
    },
    {
        "id": "d50a110.fd7717",
        "type": "tab",
        "label": "Battery Graph",
        "disabled": false,
        "info": "This flow will graph battery life for an IOT Device. This flow does make assumptions to how the data is formatted in FileMaker. Adjustments may be required if the device reports battery life in a different format."
    },
    {
        "id": "9c70f1b4.21d5c8",
        "type": "http in",
        "z": "d50a110.fd7717",
        "name": "Graph Request",
        "url": "/:coreid/graph/:event",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 120,
        "y": 80,
        "wires": [["cb2c4ca8.04d928"]]
    },
    {
        "id": "cb2c4ca8.04d928",
        "type": "change",
        "z": "d50a110.fd7717",
        "name": "Construct Query",
        "rules": [
            {
                "t": "set",
                "p": "query",
                "pt": "msg",
                "to": "{}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "query.coreid",
                "pt": "msg",
                "to": "req.params.coreid",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "query.name",
                "pt": "msg",
                "to": "req.params.event",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "sort",
                "pt": "msg",
                "to": "[{\"fieldName\":\"createdTimestamp\",\"sortOrder\":\"ascend\"}]",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "limit",
                "pt": "msg",
                "to": "1",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 320,
        "y": 80,
        "wires": [["c8754fb7.37736"]]
    },
    {
        "id": "f7ba67bb.0de458",
        "type": "http response",
        "z": "d50a110.fd7717",
        "name": "Send Graph",
        "statusCode": "200",
        "headers": {
            "content-type": "text/html"
        },
        "x": 1510,
        "y": 80,
        "wires": []
    },
    {
        "id": "c8754fb7.37736",
        "type": "dapi-perform-find",
        "z": "d50a110.fd7717",
        "name": "",
        "client": "419e4bb0.483ef4",
        "layout": "Event API",
        "layoutType": "str",
        "limit": "limit",
        "limitType": "msg",
        "offset": "",
        "offsetType": "num",
        "sort": "sort",
        "sortType": "msg",
        "query": "query",
        "queryType": "msg",
        "scripts": "",
        "scriptsType": "none",
        "portals": "",
        "portalsType": "none",
        "output": "payload",
        "x": 510,
        "y": 80,
        "wires": [["7839305.51eb2d"]]
    },
    {
        "id": "f2ef33b4.949ae",
        "type": "catch",
        "z": "d50a110.fd7717",
        "name": "Errors",
        "scope": null,
        "x": 90,
        "y": 160,
        "wires": [["f201b1b6.944a3"]]
    },
    {
        "id": "7839305.51eb2d",
        "type": "dapi-transform",
        "z": "d50a110.fd7717",
        "name": "",
        "parameters": "",
        "parameterType": "none",
        "data": "payload.data[0]",
        "dataType": "msg",
        "output": "event",
        "x": 720,
        "y": 80,
        "wires": [["dc99378d.00cf3"]]
    },
    {
        "id": "dc99378d.00cf3",
        "type": "function",
        "z": "d50a110.fd7717",
        "name": "Extract Percentage",
        "func": "let data = msg.event.data\n\nlet values = data.split('=')\n\nlet percentage = parseInt(values[values.length - 1])\n\n\nmsg.payload = percentage\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 950,
        "y": 80,
        "wires": [["30ed8149.89fa16"]]
    },
    {
        "id": "45a80e30.f33e18",
        "type": "template",
        "z": "d50a110.fd7717",
        "name": "Build Graph",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<html>\n  <head>\n   <script type=\"text/javascript\" src=\"https://www.gstatic.com/charts/loader.js\"></script>\n   <script type=\"text/javascript\">\n      google.charts.load('current', {'packages':['gauge']});\n      google.charts.setOnLoadCallback(drawChart);\n\n      function drawChart() {\n\n        var data = google.visualization.arrayToDataTable([\n          ['Label', 'Value'],\n          ['Battery', {{payload}}]\n        ]);\n\n        var options = {\n          width: 320, height: 320,\n          greenFrom: 75, greenTo: 100,\n          yellowFrom:40, yellowTo: 74,\n          redFrom:0, redTo:39,\n          minorTicks: 5\n        };\n\n        var chart = new google.visualization.Gauge(document.getElementById('chart_div'));\n\n        chart.draw(data, options);\n\n      }\n    </script>\n  </head>\n  <body style=\"backround-color: red\">\n    <div id=\"chart_div\" style=\"width: 320px; height: 320px;\"></div>\n  </body>\n</html>",
        "output": "str",
        "x": 1330,
        "y": 80,
        "wires": [["f7ba67bb.0de458"]]
    },
    {
        "id": "30ed8149.89fa16",
        "type": "range",
        "z": "d50a110.fd7717",
        "minin": "0",
        "maxin": "255",
        "minout": "0",
        "maxout": "100",
        "action": "clamp",
        "round": true,
        "property": "payload",
        "name": "Map Range",
        "x": 1150,
        "y": 80,
        "wires": [["45a80e30.f33e18"]]
    },
    {
        "id": "f201b1b6.944a3",
        "type": "subflow:421ad137.6b2c78",
        "z": "d50a110.fd7717",
        "name": "",
        "x": 780,
        "y": 160,
        "wires": [["1243b4e5.b210b3"]]
    },
    {
        "id": "1243b4e5.b210b3",
        "type": "http response",
        "z": "d50a110.fd7717",
        "name": "Respond With Error",
        "statusCode": "500",
        "headers": {
            "content-type": "text/html"
        },
        "x": 1490,
        "y": 160,
        "wires": []
    },
    {
        "id": "419e4bb0.483ef4",
        "type": "dapi-client",
        "z": "",
        "name": "DevCon Presentation",
        "timeout": "0",
        "concurrency": "11"
    }
]
